{"version":3,"sources":["meteor://ðŸ’»app/server/methods/canAccessRoom.coffee"],"names":[],"mappings":";;;;;;;;;AAAA,MAAM,CAAC,OAAP,CACC;AAAA,iBAAe,SAAC,GAAD,EAAM,MAAN;AACd;AAAA,WAAO,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,WAAxB,CAAoC,MAApC,EAA4C;AAAA,cAAQ;AAAA,kBAAU,CAAV;OAAR;KAA5C,CAAP;AAEA,yBAAO,IAAI,CAAE,kBAAb;AACC,YAAU,UAAM,CAAC,KAAP,CAAa,oBAAb,EAAmC,cAAnC,EAAmD;AAAA,QAAE,QAAQ,eAAV;OAAnD,CAAV,CADD;KAFA;AAKA;AACC,YAAU,UAAM,CAAC,KAAP,CAAa,oBAAb,EAAmC,cAAnC,EAAmD;AAAA,QAAE,QAAQ,eAAV;OAAnD,CAAV,CADD;KALA;AAAA,IAQA,OAAO,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,WAAxB,CAAoC,GAApC,EAAyC;AAAA,MAAE,QAAQ;AAAA,QAAE,WAAW,CAAb;AAAA,QAAgB,GAAG,CAAnB;AAAA,QAAsB,MAAM,CAA5B;AAAA,QAA+B,OAAO,CAAtC;AAAA,QAAyC,KAAK,CAA9C;AAAA,QAAiD,GAAG,CAApD;OAAV;KAAzC,CARP;AAUA,QAAG,IAAH;AACC,UAAG,UAAU,CAAC,KAAK,CAAC,aAAa,CAAC,IAA/B,CAAoC,IAApC,EAA0C,IAA1C,EAAgD,IAAhD,CAAH;AACC,eAAO,CAAC,CAAC,IAAF,CAAO,IAAP,EAAa,CAAC,KAAD,EAAQ,GAAR,EAAa,MAAb,EAAqB,WAArB,EAAkC,OAAlC,EAA2C,KAA3C,EAAkD,GAAlD,CAAb,CAAP,CADD;OAAA;AAGC,eAAO,KAAP,CAHD;OADD;KAAA;AAMC,YAAU,UAAM,CAAC,KAAP,CAAa,oBAAb,EAAmC,cAAnC,EAAmD;AAAA,QAAE,QAAQ,eAAV;OAAnD,CAAV,CAND;KAXc;EAAA,CAAf;CADD","file":"/server/methods/canAccessRoom.coffee.js","sourcesContent":["Meteor.methods\n\tcanAccessRoom: (rid, userId) ->\n\t\tuser = RocketChat.models.Users.findOneById userId, fields: username: 1\n\n\t\tunless user?.username\n\t\t\tthrow new Meteor.Error 'error-invalid-user', 'Invalid user', { method: 'canAccessRoom' }\n\n\t\tunless rid\n\t\t\tthrow new Meteor.Error 'error-invalid-room', 'Invalid room', { method: 'canAccessRoom' }\n\n\t\troom = RocketChat.models.Rooms.findOneById rid, { fields: { usernames: 1, t: 1, name: 1, muted: 1, sms: 1, v: 1 } }\n\n\t\tif room\n\t\t\tif RocketChat.authz.canAccessRoom.call(this, room, user)\n\t\t\t\treturn _.pick room, ['_id', 't', 'name', 'usernames', 'muted', 'sms', 'v']\n\t\t\telse\n\t\t\t\treturn false\n\t\telse\n\t\t\tthrow new Meteor.Error 'error-invalid-room', 'Invalid room', { method: 'canAccessRoom' }\n"]}